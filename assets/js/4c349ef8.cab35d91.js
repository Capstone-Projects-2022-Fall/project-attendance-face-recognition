"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[5170],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24830:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),o=["components"],c={sidebar_position:3},s="Backend AFR API",l={unversionedId:"api-specification/backend_AFR_API",id:"api-specification/backend_AFR_API",title:"Backend AFR API",description:"Author:* Hamsa Nandana Shaik",source:"@site/docs/api-specification/backend_AFR_API.md",sourceDirName:"api-specification",slug:"/api-specification/backend_AFR_API",permalink:"/project-attendance-face-recognition/docs/api-specification/backend_AFR_API",draft:!1,editUrl:"https://github.com/Capstone-Projects-2022-Fall/project-attendance-face-recognition/edit/main/documentation/docs/api-specification/backend_AFR_API.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"API 1 - AFR API",permalink:"/project-attendance-face-recognition/docs/api-specification/openapi-spec"},next:{title:"Test Procedures",permalink:"/project-attendance-face-recognition/docs/category/test-procedures"}},u={},p=[{value:"encode()",id:"encode",level:2},{value:"markAttendance()",id:"markattendance",level:2},{value:"getImagesAndLabels()",id:"getimagesandlabels",level:2},{value:"TrainImages()",id:"trainimages",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"backend-afr-api"},"Backend AFR API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Author:")," Hamsa Nandana Shaik")),(0,i.kt)("h2",{id:"encode"},"encode()"),(0,i.kt)("p",null,"The purpose of this function is to encode the images from the data. ",(0,i.kt)("br",null),"\nParameters : images ",(0,i.kt)("br",null),"\nReturns : encoded list"),(0,i.kt)("h2",{id:"markattendance"},"markAttendance()"),(0,i.kt)("p",null,"The purpose of this function is to match the faces with images from the data and mark the attendance when matched. ",(0,i.kt)("br",null),"\nParameters : none ",(0,i.kt)("br",null),"\nReturns :"),(0,i.kt)("h2",{id:"getimagesandlabels"},"getImagesAndLabels()"),(0,i.kt)("p",null,"The purpose of this function is to get the images and labels the person when recognized. ",(0,i.kt)("br",null),"\nParameters : path ",(0,i.kt)("br",null),"\nReturns : list"),(0,i.kt)("h2",{id:"trainimages"},"TrainImages()"),(0,i.kt)("p",null,"This purpose of this function is to train the images in the data. ",(0,i.kt)("br",null),"\nParameters : none ",(0,i.kt)("br",null),"\nReturns :"))}f.isMDXComponent=!0}}]);