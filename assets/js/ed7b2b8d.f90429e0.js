(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[3961],{55531:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return h}});var a=n(83117),s=n(80102),i=(n(67294),n(3905)),r=n(93456),o=["components"],c={sidebar_position:1},l=void 0,u={unversionedId:"system-architecture/design",id:"system-architecture/design",title:"design",description:"Purpose",source:"@site/docs/system-architecture/design.md",sourceDirName:"system-architecture",slug:"/system-architecture/design",permalink:"/project-attendance-face-recognition/docs/system-architecture/design",draft:!1,editUrl:"https://github.com/Capstone-Projects-2022-Fall/project-attendance-face-recognition/edit/main/documentation/docs/system-architecture/design.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"System Architecture",permalink:"/project-attendance-face-recognition/docs/category/system-architecture"},next:{title:"API Specification",permalink:"/project-attendance-face-recognition/docs/category/api-specification"}},d={},h=[{value:"UML Class Diagram",id:"uml-class-diagram",level:2},{value:"Entity-Relation Diagram",id:"entity-relation-diagram",level:2},{value:"Sequence Diagrams",id:"sequence-diagrams",level:2},{value:"Sequence Diagram for Use Case #1",id:"sequence-diagram-for-use-case-1",level:3},{value:"Sequence Diagram for Use Case #2",id:"sequence-diagram-for-use-case-2",level:3},{value:"Sequence Diagram for Use Case #3",id:"sequence-diagram-for-use-case-3",level:3},{value:"Sequence Diagram for Use Case #4",id:"sequence-diagram-for-use-case-4",level:3},{value:"Sequence Diagram for Use Case #5",id:"sequence-diagram-for-use-case-5",level:3},{value:"Sequence Diagram for Use Case #6",id:"sequence-diagram-for-use-case-6",level:3}],m={toc:h};function p(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Purpose")),(0,i.kt)("p",null,"The Design Document - Part I Architecture describes the software architecture and how the requirements are mapped into the design. This document will be a combination of diagrams and text that describes what the diagrams are showing."),(0,i.kt)("h2",{id:"uml-class-diagram"},"UML Class Diagram"),(0,i.kt)("p",null,"Many of the classes illustrated in the UML class diagram represent models that define the source of information about AFR data. It includes a representation of the user, course, section, schedule, image, and tickets that will be used to generate table in the AFR database. This will not be possible without this ORM feature provided by the Django framework. Even if these classes are placed in different apps in the project, they are all connected in a way to properly run the AFR Application. The other classes included in the application, help in creating business logic in other to properly handle the information from Canvas and match it with the appropriate user. "),(0,i.kt)(r.Mermaid,{config:{},chart:'classDiagram\n    User "1" <|-- "1" Student\n    User "1" <|-- "1" Instructor\n    User "1" *-- "1" CanvasToken\n    Section "1" --* "1..*" Schedule\n    Course "1" --* "1..*" Section\n    Instructor -- Section\n    Student "*" -- "1" Section\n    Student "1" --* "1..*" StudentImage\n    AttendanceSetting "1" *-- "1" Section\n    Attendance "1..*" *-- "1" Student\n    Section --* Attendance\n    Student "1" --* "0..*" Issue\n    Section --* Issue\n    class CanvasUtil{\n        -String API_URL\n        -String client_id\n        -String client_secret\n        +getUserAndCanvasToken(canvas_code) User\n        +getCanvasToken(canvas_course_id) Course\n        +getCourseInfo(canvas_course_id, user) Course\n        +isTeacher(user) bool\n        +addingStudentToCourse(user)\n        +currentCanvasCourse(user) Course\n    }\n    class User{\n        -String first_name\n        -String last_name\n        -String email\n        -String username\n        +is_active() bool\n    }\n    class Student{\n        -String canvasId\n        +__str__() String\n    }\n    class Instructor{\n        -String canvasId\n        +__str__() String\n    }\n    class CanvasToken{\n        -String accessToken\n        -String refreshToken\n        -int expires\n        -date created\n        +is_valid() bool\n    }\n    class Issue{\n        -Student student\n        -Section section\n        -bool status\n        -Date created\n        -Date modified\n        -String subject\n        -String message\n        +__str__() String\n    }\n    class Attendance{\n        -date recordedDate\n        -time recordedTime\n        -String status\n        -Section section\n        -Student student\n        +studentName() String\n        +displayCourse() String\n        +displaySection() String\n        +__str__() String\n    }\n    class Course{\n        -String canvasId\n        -String name\n        -String course_number\n        -date start_date\n        -date end_date\n        +__str__() String\n    }\n    class Section{\n        -String canvasId\n        -String name\n        -Course course\n        -Instructor instructor\n        -date end_date\n        -List~Student~ students\n        +__str__() String\n    }\n    class Schedule{\n        -int weekday\n        -time start_time\n        -time end_time\n        -Section section\n        +dayOfWeek() String\n        +__str__() String\n    }\n    class AttendanceSetting{\n        -int duration\n        -Section section\n    }\n    class StudentImage{\n        -File imageFile\n        -String encoding\n        -Student student\n        +__str__() String\n    }',mdxType:"Mermaid"}),(0,i.kt)("h2",{id:"entity-relation-diagram"},"Entity-Relation Diagram"),(0,i.kt)("p",null,"The AFR database is an essential piece in the functioning of the application. It consists of thirteen tables that store information about users and the courses found in canvas for a particular user. A user can be either a student or a professor. Each user will have a stored token that will be created as the user first log in the application. That token will be retrieved every time the user request access to the application.\nAs a student, AFR store a reference to the user id found in canvas to retrieve and update any changes that was done on the canvas platform. Since AFR is a facial recognition application, a student has the possibility to store more than one encoded image which will facilitate the authentication of the user once he/she is trying to mark themselves PRESENT in a particular class. A special table called \u201cattendance_Issue\u201d will store any submitted ticket created by a student once there is a concern in taking attendance.\nStudents will not be able to explore AFR complete feature if their professor does not properly configure the section prior to the beginning of the semester. For the app to work accurately for each student, AFR store all sections configurations that will be retrieved once a student is trying to take attendance."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/17518043/202818573-e526e259-cc87-4fad-80e9-1daf42d2f5c5.png",alt:"newER_AFR"})),(0,i.kt)("h2",{id:"sequence-diagrams"},"Sequence Diagrams"),(0,i.kt)("h3",{id:"sequence-diagram-for-use-case-1"},"Sequence Diagram for Use Case #1"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"User Story:\nAs a new student using the attendance face recognition system for the first time, I want to access the attendance.",(0,i.kt)("br",null))),(0,i.kt)("p",null,"Use Case:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the user is a new student, they login to canvas using their credentials"),(0,i.kt)("li",{parentName:"ul"},"They click on attendance from the navigation menu on the left"),(0,i.kt)("li",{parentName:"ul"},"They authorize the access of the AFR application"),(0,i.kt)("li",{parentName:"ul"},"They then upload a few pictures of themself to add to the data set"),(0,i.kt)("li",{parentName:"ul"},"Once finished, they can go to home and click on take attendance"),(0,i.kt)("li",{parentName:"ul"},"The student gives permission for the application to use the camera and record their attendance"),(0,i.kt)("li",{parentName:"ul"},"Once the attendance is recorded, they can exit out of the application")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/78066498/202630882-41135da7-6cad-44c1-980e-d2a2ce7c9714.png",alt:"image"})),(0,i.kt)("h3",{id:"sequence-diagram-for-use-case-2"},"Sequence Diagram for Use Case #2"),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"User story:\nAs an enrolled student, I can directly login through canvas and use it for attendance.",(0,i.kt)("br",null))),(0,i.kt)("p",null,"Use case:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the user is a student, they login to canvas using their credentials"),(0,i.kt)("li",{parentName:"ul"},"They click on attendance from the navigation menu on the left"),(0,i.kt)("li",{parentName:"ul"},"The student clicks on take attendance"),(0,i.kt)("li",{parentName:"ul"},"The student gives permission for the application to use the camera"),(0,i.kt)("li",{parentName:"ul"},"The student looks at the camera"),(0,i.kt)("li",{parentName:"ul"},"The system matches the face"),(0,i.kt)("li",{parentName:"ul"},"The system marks the attendance as present")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/78066498/202631011-cf16caf1-5d68-4f2b-ac15-69d6f90d94bd.png",alt:"image"})),(0,i.kt)("h3",{id:"sequence-diagram-for-use-case-3"},"Sequence Diagram for Use Case #3"),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"User Story:\nAs a student, if I\u2019m unable to get my attendance recorded after multiple attempts, I want an alternative method to verify my presence and let the professor know that I'm in class.",(0,i.kt)("br",null))),(0,i.kt)("p",null,"Use Case:\nIf the user is a student, they login to canvas using their credentials"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"They click on attendance from the navigation menu on the left"),(0,i.kt)("li",{parentName:"ul"},"The student clicks on take attendance"),(0,i.kt)("li",{parentName:"ul"},"The student gives permission for the application to use the camera"),(0,i.kt)("li",{parentName:"ul"},"Then the student looks at the camera to record the attendance"),(0,i.kt)("li",{parentName:"ul"},"The system has trouble recognizing the student and displays error message, even after multiple tries"),(0,i.kt)("li",{parentName:"ul"},"The student then clicks the \u2018Need Help\u2019 button to report the issue to the professor"),(0,i.kt)("li",{parentName:"ul"},"The professor gets notified that the specific student user has an issue marking their attendance")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/78066498/202631114-4e994c38-bfea-42d6-8a70-392894291a18.png",alt:"image"})),(0,i.kt)("h3",{id:"sequence-diagram-for-use-case-4"},"Sequence Diagram for Use Case #4"),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"User story:\nAs a professor, I want to have attendance taken automatically at a specific time of the class.",(0,i.kt)("br",null),"\nUse case:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An admin user signs in through canvas"),(0,i.kt)("li",{parentName:"ul"},"They click on attendance from the navigation menu on the left"),(0,i.kt)("li",{parentName:"ul"},"As they are redirected to the home page, they select the desired class"),(0,i.kt)("li",{parentName:"ul"},"Next, they set a recurring days and time for attendance during beginning of the semester"),(0,i.kt)("li",{parentName:"ul"},"The system opens the attendance automatically to each student for that set time every class")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/78066498/202631232-12debbdd-9098-42c8-8299-2b8f3fb694dd.png",alt:"image"})),(0,i.kt)("h3",{id:"sequence-diagram-for-use-case-5"},"Sequence Diagram for Use Case #5"),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"User story:\nAs a professor, I want to have real time access of the attendance and get a report of the students\u2019 attendance.",(0,i.kt)("br",null))),(0,i.kt)("p",null,"Use case: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An admin user signs in through canvas"),(0,i.kt)("li",{parentName:"ul"},"They click on attendance from the navigation menu on the left"),(0,i.kt)("li",{parentName:"ul"},"As they are redirected to the home page and once the class is finished, they click on the 'Reports' tab"),(0,i.kt)("li",{parentName:"ul"},"Then they select a specific class to view the report"),(0,i.kt)("li",{parentName:"ul"},"Once selected, the report can be seen"),(0,i.kt)("li",{parentName:"ul"},"If they want to make any adjustments, they can click on \u2018Record manually\u2019 to make changes")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/78066498/202640301-03a226f6-498d-42a0-bf19-2269637ae04c.png",alt:"image"})),(0,i.kt)("h3",{id:"sequence-diagram-for-use-case-6"},"Sequence Diagram for Use Case #6"),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"User Story:\nAs a professor, I want to be notified/informed if any student has issues taking attendance.",(0,i.kt)("br",null))),(0,i.kt)("p",null,"Use Case:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An admin user signs in through canvas"),(0,i.kt)("li",{parentName:"ul"},"They click on attendance from the navigation menu on the left"),(0,i.kt)("li",{parentName:"ul"},"As they are redirected to the home page, they click on the 'Issues' tab"),(0,i.kt)("li",{parentName:"ul"},"They can see the issues reported by the students from different classes and sections"),(0,i.kt)("li",{parentName:"ul"},"They can click to view the issues")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/78066498/202643225-f105aea1-802d-41de-8670-f320cc5b05ac.png",alt:"image"})))}p.isMDXComponent=!0},11748:function(e,t,n){var a={"./locale":89234,"./locale.js":89234};function s(e){var t=i(e);return n(t)}function i(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}s.keys=function(){return Object.keys(a)},s.resolve=i,e.exports=s,s.id=11748}}]);