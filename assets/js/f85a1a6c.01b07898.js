"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[1270],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=s,g=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function f(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},10770:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=n(83117),s=n(80102),a=(n(67294),n(3905)),o=["components"],i={sidebar_position:1},c="Unit tests",u={unversionedId:"testing/unit-testing",id:"testing/unit-testing",title:"Unit tests",description:"For each method, one or more test cases.",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-attendance-face-recognition/docs/testing/unit-testing",draft:!1,editUrl:"https://github.com/Capstone-Projects-2022-Fall/project-attendance-face-recognition/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-attendance-face-recognition/docs/category/test-procedures"},next:{title:"Integration tests",permalink:"/project-attendance-face-recognition/docs/testing/integration-testing"}},l={},p=[{value:"TestObtainingCanvasToken(canvas_code)",id:"testobtainingcanvastokencanvas_code",level:2},{value:"TestGeneratingAccessToken",id:"testgeneratingaccesstoken",level:2},{value:"TestEncodeStudentFace(user, upload_image)",id:"testencodestudentfaceuser-upload_image",level:2},{value:"TestRecognizeImage (upload_image)",id:"testrecognizeimage-upload_image",level:2},{value:"TestGetUserInfo()",id:"testgetuserinfo",level:2},{value:"TestGetUserAttendanceReport()",id:"testgetuserattendancereport",level:2},{value:"TestReportIssue()",id:"testreportissue",level:2},{value:"TestUploadPicture(picture)",id:"testuploadpicturepicture",level:2},{value:"TestCameraSnapShotButton()",id:"testcamerasnapshotbutton",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,s.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"unit-tests"},"Unit tests"),(0,a.kt)("p",null,"For each method, one or more test cases."),(0,a.kt)("p",null,"A test case consists of input parameter values and expected results."),(0,a.kt)("p",null,"All external classes should be stubbed using mock objects."),(0,a.kt)("h2",{id:"testobtainingcanvastokencanvas_code"},"TestObtainingCanvasToken(canvas_code)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: Send a http post request to canvas passing code to request token access\n    Result: return pass if receiving token from canvas, else false\n")),(0,a.kt)("h2",{id:"testgeneratingaccesstoken"},"TestGeneratingAccessToken"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: Request token to access AFR API\n    Result: Return pass if receiving token from AFR api, else false\n")),(0,a.kt)("h2",{id:"testencodestudentfaceuser-upload_image"},"TestEncodeStudentFace(user, upload_image)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: Pass user id and image to be encoded and save to database\n    Result: Return pass if image has been encoded, else false\n")),(0,a.kt)("h2",{id:"testrecognizeimage-upload_image"},"TestRecognizeImage (upload_image)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: Pass uploaded user\u2019s picture to recognize a user as a student\n    Result: Return pass if student has been recognized, else false\n")),(0,a.kt)("h2",{id:"testgetuserinfo"},"TestGetUserInfo()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: Request user info\n    Result: Return pass if response is not empty, else false\n")),(0,a.kt)("h2",{id:"testgetuserattendancereport"},"TestGetUserAttendanceReport()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: Request user\u2019s attendance report\n    Result: Return pass if response is not empty, else false\n")),(0,a.kt)("h2",{id:"testreportissue"},"TestReportIssue()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: See if user can click on help button and send notification to report issue\n    Result: Return pass if notification has been sent, else false\n")),(0,a.kt)("h2",{id:"testuploadpicturepicture"},"TestUploadPicture(picture)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: see if user can upload picture\n    Result: return pass if picture has been uploaded, else false\n")),(0,a.kt)("h2",{id:"testcamerasnapshotbutton"},"TestCameraSnapShotButton()"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    Test: see if camera is able to take a snapshot after pressing button\n    Result: return pass if snapshot has been taken\n")))}f.isMDXComponent=!0}}]);